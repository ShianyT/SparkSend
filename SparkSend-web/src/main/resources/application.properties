SparkSend.database.ip=localhost
SparkSend.database.port=3306
SparkSend.database.username=root
SparkSend.database.password=666666

################################################## database #################################################
spring.datasource.url=jdbc:mysql://${SparkSend.database.ip:sparksend-mysql}:${SparkSend.database.port:3306}/sparksend?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false&zeroDateTimeBehavior=convertToNull
spring.datasource.username=${SparkSend.database.username:root}
spring.datasource.password=${SparkSend.database.password:666666}
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
##############################################################################################################


#################################################### kafka ###################################################
spring.kafka.bootstrap-servers=${SparkSend.kafka.ip:sparksend-kafka}:${SparkSend.kafka.port:9092}
# key的序列化
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# 值的序列化
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# key的反序列化
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# 值的反序列化
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# 当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，从头开始消费
spring.kafka.consumer.auto-offset-reset=earliest
# consumer自动向zookeeper提交offset的频率，默认：5000
spring.kafka.consumer.auto-commit-interval=1000
# 如果为真，consumer所fetch的消息的offset将会自动的同步到zookeeper。
# 这项提交的offset将在进程挂掉时，由新的consumer使用，默认：true
spring.kafka.consumer.enable-auto-commit=true

###
SprakSend.business.topic.name=SparkSendBusiness
SparkSend.business.recall.topic.name=SparkSendRecall
SparkSend.business.log.topic.name=SparkSendTraceLog
SparkSend.business.recall.group.name=recallGroupId
##############################################################################################################


#################################################### redis ###################################################
SparkSend.redis.ip=127.0.0.1
spring.redis.host=${SparkSend.redis.ip:sparksend-redis}
spring.redis.port=${SparkSend.redis.port:6379}
spring.redis.password=${SparkSend.redis.password:666666}
##############################################################################################################